@model Traders_Marketplace.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}

<h2>Create a New Account</h2>
<p>
    Use the form below to create a new account. 
</p>
@*<p>
    Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
</p>*@

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>

           <div class="editor-label">
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName)
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>

           <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Address)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Address)
                @Html.ValidationMessageFor(m => m.Address)
            </div>

             @{
    List<SelectListItem> towns = new BusinessLogic.UsersBL().GetTowns().Select(x => new SelectListItem()
    {
        Text = x.TownName,
        Value = x.TownID.ToString()
    }).ToList();

                <div class="editor-label">
                    @Html.Label("Town")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.SelectedTown, towns, "Please Select")
                    @Html.ValidationMessageFor(model => model.Towns)
                </div>
                
            }
           

            <div class="editor-label">
                @Html.LabelFor(m => m.ContactNo)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.ContactNo)
                @Html.ValidationMessageFor(m => m.ContactNo)
            </div>

             <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

             @{
                List<SelectListItem> roles = new BusinessLogic.UsersBL().GetAllRolesExcludingAdmin().Select(x => new SelectListItem()
                {
                    Text = x.Role1,
                    Value = x.RoleID.ToString()
                }).ToList();

                <div class="editor-label">
                    @Html.Label("Role")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.SelectedRole, roles, "Please Select")
                    @Html.ValidationMessageFor(model => model.Roles)
                </div>
                }


            <p>
                <input type="submit" value="Register" />
            </p>
        </fieldset>
    </div>
}
